(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{260:function(s,e,t){"use strict";t.r(e);var n=t(2),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("进行软件测试的原因有很多, 对于我而言有两个")]),s._v(" "),t("ol",[t("li",[s._v("提升软件开发的效率")]),s._v(" "),t("li",[s._v("在进行代码修改的时候确保不破坏现有的代码")])]),s._v(" "),t("p",[s._v("那么问题来了")]),s._v(" "),t("ul",[t("li",[s._v("你是否写过 Javascript 测试")]),s._v(" "),t("li",[s._v("你用过那些 Javacript 测试框架")]),s._v(" "),t("li",[s._v("你是否有从零搭建测试环境的经历")]),s._v(" "),t("li",[s._v("你是否深入理解测试框架, 并且能自己实现最小功能集合的框架")])]),s._v(" "),t("p",[s._v("如果你的回答是否也不要紧, 希望阅读本文之后你能够对 Javascript 测试有一定见解, 写出更好的测试用例")]),s._v(" "),t("p",[s._v("我们先从为一个简单的 math.js 写测试开始")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const sum = (a, b) => a + b\nconst subtract = (a, b) => a - b\nmodule.exports = {sum, subtract}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"第一步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一步"}},[s._v("#")]),s._v(" 第一步")]),s._v(" "),t("p",[s._v("以下是我能想出的最简单的测试用例")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// basic-test.js\nconst atual = true\nconst expected = false\nif(actual !== expected) {\n    throw new Error(`${atual is not ${expected}`)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("你可以通过运行 node basic-test.js 来测试其中的代码")]),s._v(" "),t("p",[s._v("有了上面的例子, 我们很容易理解什么是测试用例")]),s._v(" "),t("blockquote",[t("p",[s._v("测试用例, 就是一段当实际结果不符合预期时候抛出异常的一段代码")])]),s._v(" "),t("p",[s._v('当需要测试的代码需要建立某些状态(比如一个组件在进行事件点击之前需要先渲染出来或者数据需要从数据库中提前取出的时候), 事情会变得稍微复杂一些, 但是, 类似上面 math.js 的"纯函数"(对于相同的输入总是能够返回相同的结果,并且不更改其他地方的状态)是很容易测试的')]),s._v(" "),t("p",[t("strong",[s._v("actual !== expected")]),s._v("的部分称为"),t("strong",[s._v("断言(assertion)")]),s._v(", 要通过测试, 实际的输出值要和预期的值一致. 断言的形式多样, 可以是实际值匹配某条正则规则, 或是数组满足特定长度, 总之如果断言失败, 就会抛出异常.")]),s._v(" "),t("p",[s._v("接下来我们为 math.js 写一段最简单的测试")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 1.js\nconst {sum, subtract} = require('./math')\nlet result, expected\nresult = sum(3, 7)\nexpected = 10\nif (result !== expected) {\n  throw new Error(`${result} is not equal to ${expected}`)\n}\nresult = subtract(7, 3)\nexpected = 4\nif (result !== expected) {\n  throw new Error(`${result} is not equal to ${expected}`)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("我们通过命令行运行"),t("strong",[s._v("node 1.js")]),s._v(", 发现测试通过, 没有抛出异常, 但如果我们把+变成-号, 再次运行上述代码, 我们会看到以下信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ node 1.js\n/Users/kdodds/Desktop/js-test-example/1.js:8\n  throw new Error(`${result} is not equal to ${expected}`)\n  ^\nError: -4 is not equal to 10\n    at Object.<anonymous> (/Users/kdodds/Desktop/js-test-example/1.js:8:9)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("好极了, 我们现在已经有了最基本的测试用例, "),t("strong",[s._v("对于测试框架(或者断言库)而言,错误信息是及其重要的")]),s._v(",当我们的测试不通过的时候, 第一眼看到的就是错误信息, 如果你不能立即从错误信息判断出哪处代码出现了问题,势必浪费时间. 很多时候, 错误信息的质量取决于你对正在使用的测试框架提供的断言库的理解程度.")]),s._v(" "),t("h2",{attrs:{id:"第二步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二步"}},[s._v("#")]),s._v(" 第二步")]),s._v(" "),t("p",[s._v("实际上, node.js 中有一个和上述功能相似的"),t("a",{attrs:{href:"https://nodejs.org/api/assert.html#assert_assert",target:"_blank",rel:"noopener noreferrer"}},[s._v("断言模块"),t("OutboundLink")],1),s._v(", 我们可以使用该模块对我们的代码进行重构")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 2.js\nconst assert = require('assert')\nconst {sum, subtract} = require('./math')\nlet result, expected\nresult = sum(3, 7)\nexpected = 10\nassert.strictEqual(result, expected)\nresult = subtract(7, 3)\nexpected = 4\nassert.strictEqual(result, expected)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("好极了, 经过重构的测试模块功能一样, 但错误信息却稍微不同")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ node 2.js\nassert.js:42\n  throw new errors.AssertionError({\n  ^\nAssertionError [ERR_ASSERTION]: -4 === 10\n    at Object.<anonymous> (/Users/kdodds/Desktop/js-test-example/2.js:8:8)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h2",{attrs:{id:"第三步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三步"}},[s._v("#")]),s._v(" 第三步")]),s._v(" "),t("p",[s._v('我们可以通过上述的例子来打造属于自己的"测试框架"和"断言库". 我们先从断言库开始. 这次我们不使用 node 的 assert 模块, 相反, 我们创建一个 expect 的模块')]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 3.js\nconst {sum, subtract} = require('./math')\nlet result, expected\n\nresult = sum(3, 7)\nexpected = 10\nexpect(result).toBe(expected)\n\nresult = subtract(7, 3)\nexpected = 4\nexpect(result).toBe(expected)\n\nfunction expect(actual) {\n  return {\n    toBe(expected) {\n      if (actual !== expected) {\n        throw new Error(`${actual} is not equal to ${expected}`)\n      }\n    },\n  }\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("我们可以在 expecet 对象上添加许多断言方法(如 toMatchRegex 或 toHaveLength), 运行上述代码, 得到下列错误信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ node 3.js\n/Users/kdodds/Desktop/js-test-example/3.js:17\n        throw new Error(`${actual} is not equal to ${expected}`)\n        ^\nError: -4 is not equal to 10\n    at Object.toBe (/Users/kdodds/Desktop/js-test-example/3.js:17:15)\n    at Object.<anonymous> (/Users/kdodds/Desktop/js-test-example/3.js:7:16)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("一切看起来还不错")]),s._v(" "),t("h2",{attrs:{id:"第四步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四步"}},[s._v("#")]),s._v(" 第四步")]),s._v(" "),t("p",[s._v("上面的实现存在一个问题, 那就是因为现在的错误信息只告诉我们 expect 函数中的 actual !== expected 条件没有被满足, 但如何知道哪一个断言出了错, 也可能是 substract 模块出了问题, 并且, 我们的测试并没有对测试进行归类,这样当测试用例一多, 就会出混乱不堪")]),s._v(" "),t("p",[s._v("我们可以使用 helper 函数来解决问题")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 4.js\nconst {sum, subtract} = require('./math')\ntest('sum adds numbers', () => {\n  const result = sum(3, 7)\n  const expected = 10\n  expect(result).toBe(expected)\n})\ntest('subtract subtracts numbers', () => {\n  const result = subtract(7, 3)\n  const expected = 4\n  expect(result).toBe(expected)\n})\n\nfunction test(title, callback) {\n  try {\n    callback()\n    console.log(`✓ ${title}`)\n  } catch (error) {\n    console.error(`✕ ${title}`)\n    console.error(error)\n  }\n}\n\nfunction expect(actual) {\n  return {\n    toBe(expected) {\n      if (actual !== expected) {\n        throw new Error(`${actual} is not equal to ${expected}`)\n      }\n    },\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("有了上面的 test 方法, 我们就可以将相关的测试合并到一起, 加以命名区分, 并且给出来的错误信息更加具体, 同时当某用例不通过的时候, 代码也不会终止执行, 而是执行完所有的测试用例. 下面是我们的输出的错误信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ node 4.js\n✕ sum adds numbers\nError: -4 is not equal to 10\n    at Object.toBe (/Users/kdodds/Desktop/js-test-example/4.js:29:15)\n    at test (/Users/kdodds/Desktop/js-test-example/4.js:6:18)\n    at test (/Users/kdodds/Desktop/js-test-example/4.js:17:5)\n    at Object.<anonymous> (/Users/kdodds/Desktop/js-test-example/4.js:3:1)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n✓ subtract subtracts numbers\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("有了 title, 我们很容易找到对应的错误代码, 予以修正.")]),s._v(" "),t("h2",{attrs:{id:"第五步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第五步"}},[s._v("#")]),s._v(" 第五步")]),s._v(" "),t("p",[s._v("现在我们需要做的就是写一个简单的 cli 工具,搜索我们的所有测试用例并执行.当然我们还可以在现有的基础上添加其他的功能")]),s._v(" "),t("p",[s._v("行文至此, 我们已经建立了一个简单的测试框架了.幸运的是, 社区中已经有了许多优秀的实现, 比如来自 facebook 的"),t("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("jest.js"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("我们用 jest 来重构上面的代码, 我们需要做的, 就是用 jest 的 test 和 expect 函数来替换我们的 test 和 expect 函数,")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 5.js\nconst {sum, subtract} = require('./math')\ntest('sum adds numbers', () => {\n  const result = sum(3, 7)\n  const expected = 10\n  expect(result).toBe(expected)\n})\ntest('subtract subtracts numbers', () => {\n  const result = subtract(7, 3)\n  const expected = 4\n  expect(result).toBe(expected)\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("运行上述代码, 会得到下列的错误信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ jest\n FAIL  ./5.js\n  ✕ sum adds numbers (5ms)\n  ✓ subtract subtracts numbers (1ms)\n● sum adds numbers\nexpect(received).toBe(expected)\n    Expected value to be (using Object.is):\n      10\n    Received:\n      -4\n      4 |   const result = sum(3, 7)\n      5 |   const expected = 10\n    > 6 |   expect(result).toBe(expected)\n      7 | })\n      8 |\n      9 | test('subtract subtracts numbers', () => {\n      at Object.<anonymous>.test (5.js:6:18)\nTest Suites: 1 failed, 1 total\nTests:       1 failed, 1 passed, 2 total\nSnapshots:   0 total\nTime:        0.6s, estimated 1s\nRan all test suites.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("文字看起来有些不清楚, 实际上输出的结果是彩色的")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://kentcdodds.com/static/509c08a8fd5d6a2516e3b85fbe8b4213/8ff1e/0.png",alt:"jest-output"}})]),s._v(" "),t("p",[s._v("可以看到, jest 输出的错误信息更加一目了然")]),s._v(" "),t("h2",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),t("p",[s._v("我们还没有谈及一些 jest 中其他高级的功能, 如"),t("a",{attrs:{href:"https://jestjs.io/docs/en/api.html#beforeeachfn-timeout",target:"_blank",rel:"noopener noreferrer"}},[s._v("beforeEach"),t("OutboundLink")],1),s._v("或是"),t("a",{attrs:{href:"https://jestjs.io/docs/en/api.html#describename-fn",target:"_blank",rel:"noopener noreferrer"}},[s._v("describe"),t("OutboundLink")],1),s._v(", 以及其他的断言形式, 如"),t("a",{attrs:{href:"https://jestjs.io/docs/en/expect.html#tomatchobjectobject",target:"_blank",rel:"noopener noreferrer"}},[s._v("toMatchObject"),t("OutboundLink")],1),s._v("或是"),t("a",{attrs:{href:"https://jestjs.io/docs/en/expect.html#tocontainitem",target:"_blank",rel:"noopener noreferrer"}},[s._v("toContain"),t("OutboundLink")],1),s._v(", 但希望通过本文你已经对 javascript 测试有了一定的理解")]),s._v(" "),t("p",[s._v("感谢阅读!")]),s._v(" "),t("p",[s._v("本文翻译自 kentcdodds 的"),t("a",{attrs:{href:"https://kentcdodds.com/blog/but-really-what-is-a-javascript-test",target:"_blank",rel:"noopener noreferrer"}},[s._v("《But really, what is a JavaScript test?》"),t("OutboundLink")],1),s._v(", 其中加入了自己的理解, 水平有限,不足之处还望高手指出, 版权归原作者所有")])])}),[],!1,null,null,null);e.default=a.exports}}]);